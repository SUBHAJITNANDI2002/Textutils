{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TestForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtntext","style","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","border","Navbar","mode","href","title","aria-label","react_router_dom","aria-current","to","toggleMode","htmlFor","TestForm","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","setAlert","message","setTimeout","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7b3005e4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n       const lower=word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase()+lower.slice(1); \r\n    }\r\n  return (\r\n    \r\n        props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n          \r\n        </div>\r\n   \r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState( {\r\n        color: 'black',\r\n        backgroundColor:'white'\r\n        \r\n    })\r\n    const [btntext, setBtntext] = useState(\"Enable Dark Mode\")\r\n    const togglestyle=()=>{\r\n        if(myStyle.color==='black'){\r\n            setMyStyle({\r\n                color:'white',\r\n                backgroundColor:'black',\r\n                border: '1px solid white'\r\n            })\r\n            setBtntext(\"Enable LightMode\");\r\n\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n\r\n            })\r\n            setBtntext(\"Enable DarkMode\");\r\n\r\n        }\r\n\r\n    }\r\n  \r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Accordion Item #1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Accordion Item #3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\"style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className='container my-3'>\r\n\r\n        <button onClick={togglestyle} type=\"button\" className=\"btn btn-primary\">{btntext} </button>\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n\r\n        </li>\r\n      </ul>\r\n      \r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick ={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={title:PropTypes.string}\r\nNavbar.defaultProps={\r\n    title:'set title here'\r\n}\r\n\r\n","import React,{useState} from 'react'\r\nexport default function TestForm(props) {\r\n  const handleupClick=()=>{\r\n    // console.log(\"Uppercase was clicked\" +text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to Uppercase!\",\"success\");\r\n\r\n  }\r\n  const handleloClick=()=>{\r\n    // console.log(\"Uppercase was clicked\" +text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Coverted to Lowercase!\",\"success\");\r\n\r\n  }\r\n  const handleclearClick=()=>{\r\n    // console.log(\"Uppercase was clicked\" +text);\r\n    let newText='';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\",\"success\");\r\n\r\n  }\r\n  const handleOnChange=(event)=>{\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value); \r\n\r\n  }\r\n  const handleCopy=()=>{\r\n    // console.log(\"I am copy\"); \r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n   \r\n    navigator.clipboard.writeText(text.value);\r\n\r\n\r\n    props.showAlert(\"Copy to Clipboard!\",\"success\");\r\n\r\n  }\r\n  const handleExtraSpaces=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\",\"success\");\r\n\r\n     \r\n\r\n  }\r\n\r\n\r\n  const [text, setText]=useState('');\r\n  // setText=(\"new text\");\r\n  return ( \r\n    <>  \r\n<div className=\"container\" style= {{color:props.mode==='dark'?'white':'#042743'}} >\r\n    <h1>{props.heading}</h1>\r\n\r\n<div className=\"mb-3\">\r\n \r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n </div>\r\n <button className=\"btn btn-primary mx-2 \" onClick={handleupClick}>Convert to Uppercase</button>\r\n <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to Lowercase</button>\r\n <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n\r\n <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra spaces</button>\r\n </div>\r\n<div className=\"container my-2\"style={{color:props.mode==='dark'?'white':'black'}}>\r\n  <h1>Your text summary</h1>\r\n  <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n<p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n<h1>Preview</h1>\r\n<p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n</div>\r\n </>\r\n \r\n  )\r\n}\r\n","\n// import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TestForm';\nimport React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n     setAlert({\n      msg:message,\n      type:type  \n     })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has enabled\",\"success\");\n      document.title=\"TextUtils- Dark Mode\";\n\n    }\n    else{\n\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has enabled\",\"success\");\n      document.title=\"TextUtils- Light Mode\";\n    }\n  }\n  return (\n   <>\n   <Router>\n<Navbar title=\"Text Util\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n<Routes>\n\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"mode={mode}/>}/>\n            \n          <Route exact path=\"/about\" element={<About/>}/>\n         \n        </Routes>\n\n</div>\n        </Router>\n\n\n\n\n   </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}